# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (paultyng/ghaction-import-gpg) that assumes you set your
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: release
on:
  push:
    tags:
      - 'v*'
jobs:
  # checkout:
  #   runs-on: ubuntu-latest
  #   name: Checkout the repo
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Print workspace dir
  #       run: |
  #         ls -al $GITHUB_WORKSPACE

  # write-version:
  #   runs-on: ubuntu-latest
  #   needs: checkout
  #   name: Write version to file
  #   steps:
  #     - name: Print workspace
  #       run: |
  #         echo "Repo workspace - $GITHUB_WORKSPACE"
  #         ls -la $GITHUB_WORKSPACE

  #     - name: Update version
  #       uses: brettdorrans/write-version-to-file@master
  #       with:
  #         filename: '$GITHUB_WORKSPACE/.terraform-provider-version'

  #     - name: Print workspace dir
  #       run: |
  #         ls -la $GITHUB_WORKSPACE

  goreleaser:
    runs-on: ubuntu-latest
    name: Create a new release
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # - name: Print workspace dir
      #   run: |
      #     ls -al $GITHUB_WORKSPACE

      # - name: Update version
      #   uses: brettdorrans/write-version-to-file@master
      #   with:
      #     filename: './.terraform-provider-version'

      # - name: Version info
      #   run: |
      #     cat $GITHUB_WORKSPACE/.terraform-provider-version

      # - name:  Commit new version
      #   uses: actions-js/push@master
      #   with:
      #     message: "Add new version to version file"
      #     github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
